{"version":3,"sources":["components/peoplesData.js","components/Pagination.js","components/PeopleTable.js","App.js","index.js"],"names":["getPeoples","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","people","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","Pagination","handleClickPagination","page","onPerPageChange","peoples","perPage","pageNumbers","i","Math","ceil","length","push","react_default","createElement","Fragment","onChange","event","target","value","className","id","selected","aria-label","classnames","page-item","disabled","onClick","map","number","active","href","PeopleTable","person","name","sex","born","died","mother","father","age","century","children","App","state","indexOfFirstPeople","indexOfLastPeople","selectedPage","_this","setState","peopleData","index","objectSpread","filter","item","join","_this$state","currentTodos","slice","console","log","components_PeopleTable","components_Pagination","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.da4259ac.chunk.js","sourcesContent":["const getPeoples = async() => {\n  const url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\n  const response = await fetch(url);\n  const people = await response.json();\n\n  return people;\n};\n\nexport default getPeoples;\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({ handleClickPagination, page, onPerPageChange, peoples, perPage }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(peoples.length / perPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <>\n      <select\n        onChange={(event) => onPerPageChange(event.target.value)}\n        className=\"form-control\"\n        id=\"formControlSelect\"\n      >\n        <option value=\"3\">3</option>\n        <option value=\"5\" selected>5</option>\n        <option value=\"10\">10</option>\n        <option value=\"20\">20</option>\n      </select>\n      <nav aria-label=\"...\">\n        <ul className=\"pagination justify-content-center\">\n          <li\n            className={classnames({\n              'page-item': true,\n              disabled: page === 1,\n            })}\n            onClick={() => handleClickPagination('previous')}\n          >\n            <span className=\"page-link\">Previous</span>\n          </li>\n          {pageNumbers.map(number =>\n            <li\n              className={classnames({\n                'page-item': true,\n                active: number === page,\n              })}\n              onClick={() => handleClickPagination(number)}\n            >\n              <a\n                className=\"page-link\"\n              >\n                {number}\n              </a>\n            </li>)\n          }\n          <li\n            className={classnames({\n              'page-item': true,\n              disabled: page === pageNumbers.length,\n            })}\n            onClick={() => handleClickPagination('next', pageNumbers)}\n          >\n            <a className=\"page-link\" href=\"#\">Next</a>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nPagination.propTypes = {\n  pageNumbers: PropTypes.number.isRequired,\n  handleClickPagination: PropTypes.func.isRequired,\n  onPerPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PeopleTable = ({ peoples }) => (\n  <table className=\"table table-bordered\">\n    <thead className=\"thead-dark\">\n      <tr>\n        <th>id</th>\n        <th>name</th>\n        <th>sex</th>\n        <th>born</th>\n        <th>died</th>\n        <th>mother</th>\n        <th>father</th>\n        <th>age</th>\n        <th>century</th>\n        <th>children</th>\n      </tr>\n    </thead>\n    <tbody>\n      {peoples.map(person => (\n        <tr>\n          <td>{person.id}</td>\n          <td>{person.name}</td>\n          <td>{person.sex}</td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n          <td>{person.mother}</td>\n          <td>{person.father}</td>\n          <td>{person.age}</td>\n          <td>{person.century}</td>\n          <td>{person.children}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  peoples: PropTypes.shape({\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    father: PropTypes.string,\n    mother: PropTypes.string,\n    age: PropTypes.number,\n    century: PropTypes.number,\n    children: PropTypes.arrayOf(PropTypes.string),\n    id: PropTypes.number,\n  }).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport './App.css';\n\nimport getPeoples from './components/peoplesData';\nimport Pagination from './components/Pagination';\nimport PeopleTable from './components/PeopleTable';\n\nclass App extends React.Component {\n  state = {\n    peoples: [],\n    perPage: 5,\n    page: 1,\n    indexOfFirstPeople: 1,\n    indexOfLastPeople: 1,\n  };\n\n  async componentDidMount() {\n    const peopleData = await getPeoples();\n\n    const peoples = peopleData.map((person, index) => ({\n      id: index + 1,\n      ...person,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n      children: peopleData.filter(item => item.mother === person.name\n        || item.father === person.name)\n        .map(item => item.name)\n        .join(', '),\n    }));\n\n    this.setState({\n      peoples,\n    });\n  };\n\n  handleClickPagination = (selectedPage, pageNumbers) => {\n    const { page } = this.state;\n\n    switch (selectedPage) {\n      case 'previous':\n        if (page > 1) {\n          this.setState({\n            page: page - 1,\n          });\n        }\n\n        break;\n      case 'next':\n        if (page < pageNumbers.length) {\n          this.setState({\n            page: page + 1,\n          });\n        }\n\n        break;\n      default:\n        this.setState({\n          page: selectedPage,\n        });\n    }\n  }\n\n  onPerPageChange = (event) => {\n    this.setState({\n      perPage: event,\n      page: 1,\n    });\n  }\n\n  render() {\n    const {\n      peoples,\n      pageNumbers,\n      page,\n      perPage,\n    } = this.state;\n    const indexOfLastPeople = page * perPage > peoples.length\n      ? peoples.length\n      : page * perPage;\n    const indexOfFirstPeople = indexOfLastPeople - perPage;\n    const currentTodos = peoples.slice(indexOfFirstPeople, indexOfLastPeople);\n\n    console.log(pageNumbers);\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"main-title\">Pagination - React + Bootstrap</h1>\n        <PeopleTable peoples={currentTodos} />\n        <div className=\"pagination-content\">\n          <Pagination\n            peoples={peoples}\n            perPage={perPage}\n            handleClickPagination={this.handleClickPagination}\n            page={page}\n            onPerPageChange={this.onPerPageChange}\n          />\n        </div>\n        <div className=\"with-info-content\">\n          {indexOfFirstPeople + 1}-{indexOfLastPeople} of {peoples.length}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}